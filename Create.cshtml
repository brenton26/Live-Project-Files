@model BlueRibbonsReview.Models.Review

@{
    ViewBag.Title = "Write a review.";
    ViewBag.Tagline = "";
}

@*<h2>Create</h2>*@


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h4>Review</h4>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-dark" })
        @*ReviewDate field now automatically populated*@
 
        <div class="form-group">
            @* Hidden text box holds value of selected CampaignId to be sent to ReviewsController *@
            @* CampaignReviewID contains CampaignId only if arrived here from _Details partial view *@
            @{
                if (ViewBag.CampaignReviewId == null)
                {
                    <input class="invisible" id="hiddenCampaignId" type="text" name="CampaignId">
                }
                else
                {
                    <input class="invisible" id="hiddenCampaignId" type="text" name="CampaignId" value=@ViewBag.CampaignReviewId>       
                }
            }
            <br />
            <label class="control-label col-md-2">Campaign</label>
            <div class="col-md-10">
               @*ReviewDate field now automatically populated*@
                    @Html.Raw(ViewBag.Campaign)
                    <br />
                    @Html.ValidationMessageFor(model => model.CampaignId, "", new { @class = "text-dark" })
                    <br />
                </div>
            </div>
            <div class="form-group">
                <br />
                @Html.LabelFor(model => model.ProductRating, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="txt-center">
                        <form id="ratingsForm">
                            <div class="stars">
                                <input type="radio" name="rating" value="1" class="star-1" id="star-1" />
                                <label class="star-1" for="star-1">1</label>
                                <input type="radio" name="rating" value="2" class="star-2" id="star-2" />
                                <label class="star-2" for="star-2">2</label>
                                <input type="radio" name="rating" value="3" class="star-3" id="star-3" />
                                <label class="star-3" for="star-3">3</label>
                                <input type="radio" name="rating" value="4" class="star-4" id="star-4" />
                                <label class="star-4" for="star-4">4</label>
                                <input type="radio" name="rating" value="5" class="star-5" id="star-5" />
                                <label class="star-5" for="star-5">5</label>
                                <span></span>
                            </div>
                        </form>
                    </div>

            @Html.ValidationMessageFor(model => model.ProductRating, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.ReviewDetails, htmlAttributes: new { @class = "control-label col-md-2" })


        <div class="col-md-10">

            @Html.TextAreaFor(model => model.ReviewDetails, new { @class = "details" })

           



            @Html.ValidationMessageFor(model => model.ReviewDetails, "", new { @class = "text-danger" })


            <a href="#" data-toggle="tooltip" title="Review details character count"><p id="characterCount" class="text-muted "></p></a>



        </div>


    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
    }

    <div>
        @Html.ActionLink("See all Reviews", "Index")
    </div>

    <script>
        $( document ).ready(function() {
            $("li").click(function () {
                var listElementCampaignId = ($(this).attr("id"));
                $("#hiddenCampaignId").val(listElementCampaignId)
                var listElementCampaignName = ($(this).find("p").text());
                $("#campaignReview").val(listElementCampaignName)

                //Making image next to review details appear START
                var listElementCampaignImage = ($(this).find("img"));//Finds the image tag associated with the item that has been clicked on and binds it to the variable listElementCampaignName
                var newCampImage = listElementCampaignImage.attr("src");//Gets and targets the src attibute of the variable listElementCampaignImage which is now the image due to the previous statement  
                $("#reviewImage").attr("src", newCampImage);//Uses the id to identify the specific image tage to target and sets the src attribute to the variable established at newCampImage
                //Making image next to review details appear END

                //Makes the image element hidden until clicking on a campaign
                document.getElementById("reviewImage").style.visibility = "visible";

            });

            $("#ReviewDetails").keyup(characterCount);
            $("#ReviewDetails").keydown(characterCount);
            $("#ReviewDetails").on('input', characterCount);
        });
//Disable Chrome AutoComplete feature to prevent autoFill dropdown from covering custom dropdown
        function DisableAutoComplete() {
            var thisInput = document.getElementById('campaignReview');
            thisInput.setAttribute('autocomplete', 'off');
        }

        DisableAutoComplete();
//END--Disable Chrome AutoComplete feature to prevent autoFill dropdown from covering custom dropdown

    </script>

